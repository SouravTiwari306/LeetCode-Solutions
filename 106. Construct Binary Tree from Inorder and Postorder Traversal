
class Solution {
public:
       TreeNode *solve(vector<int> & inorder,int is,int ie,vector<int> &postorder,int pi,int pe){
             if(is>ie || pi>pe){
                 return NULL ;
             }
           int x= postorder[pe];
           TreeNode *root= new TreeNode(x);
           int f= find(inorder.begin(),inorder.end(),x)-inorder.begin();
           int left= f-is;
           root->left=solve(inorder,is,f-1,postorder,pi,pi+left-1);
           root->right=solve(inorder,f+1,ie,postorder,pi+left,pe-1);
           return root;
       }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
         return solve(inorder,0,inorder.size()-1,postorder,0,postorder.size()-1);
    }
};
